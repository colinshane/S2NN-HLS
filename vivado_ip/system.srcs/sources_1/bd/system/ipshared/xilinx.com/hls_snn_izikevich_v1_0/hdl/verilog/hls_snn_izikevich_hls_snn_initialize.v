// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_snn_izikevich_hls_snn_initialize (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_stream0_TDATA,
        input_stream0_TVALID,
        input_stream0_TREADY,
        input_stream0_TLAST,
        output_indexes_address0,
        output_indexes_ce0,
        output_indexes_q0,
        neuron_type_mem_V_address0,
        neuron_type_mem_V_ce0,
        neuron_type_mem_V_we0,
        neuron_type_mem_V_d0,
        neuron_type_mem_V_q0,
        output_indexes_mem_0,
        output_indexes_mem_0_ap_vld,
        output_indexes_mem_1,
        output_indexes_mem_1_ap_vld,
        v_mem_address0,
        v_mem_ce0,
        v_mem_we0,
        v_mem_d0,
        u_mem_address0,
        u_mem_ce0,
        u_mem_we0,
        u_mem_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 5'b1;
parameter    ap_ST_st2_fsm_1 = 5'b10;
parameter    ap_ST_st3_fsm_2 = 5'b100;
parameter    ap_ST_st4_fsm_3 = 5'b1000;
parameter    ap_ST_st5_fsm_4 = 5'b10000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv32_C28C0000 = 32'b11000010100011000000000000000000;
parameter    ap_const_lv32_C1600000 = 32'b11000001011000000000000000000000;
parameter    ap_const_lv15_70E4 = 15'b111000011100100;
parameter    ap_const_lv15_1 = 15'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] input_stream0_TDATA;
input   input_stream0_TVALID;
output   input_stream0_TREADY;
input  [0:0] input_stream0_TLAST;
output  [0:0] output_indexes_address0;
output   output_indexes_ce0;
input  [31:0] output_indexes_q0;
output  [7:0] neuron_type_mem_V_address0;
output   neuron_type_mem_V_ce0;
output   neuron_type_mem_V_we0;
output  [169:0] neuron_type_mem_V_d0;
input  [169:0] neuron_type_mem_V_q0;
output  [31:0] output_indexes_mem_0;
output   output_indexes_mem_0_ap_vld;
output  [31:0] output_indexes_mem_1;
output   output_indexes_mem_1_ap_vld;
output  [14:0] v_mem_address0;
output   v_mem_ce0;
output   v_mem_we0;
output  [31:0] v_mem_d0;
output  [14:0] u_mem_address0;
output   u_mem_ce0;
output   u_mem_we0;
output  [31:0] u_mem_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] output_indexes_address0;
reg output_indexes_ce0;
reg neuron_type_mem_V_ce0;
reg neuron_type_mem_V_we0;
reg output_indexes_mem_0_ap_vld;
reg output_indexes_mem_1_ap_vld;
reg v_mem_ce0;
reg v_mem_we0;
reg u_mem_ce0;
reg u_mem_we0;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm = 5'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_23;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_75;
wire   [14:0] x_fu_149_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_84;
wire    grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_start;
wire    grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_done;
wire    grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_idle;
wire    grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_ready;
wire   [63:0] grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TDATA;
wire    grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TVALID;
wire    grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TREADY;
wire   [0:0] grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TLAST;
wire   [7:0] grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_address0;
wire    grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_ce0;
wire    grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_we0;
wire   [169:0] grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_d0;
wire   [169:0] grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_q0;
reg   [14:0] x1_reg_110;
wire   [0:0] exitcond_fu_143_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_113;
reg    grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_s_fu_155_p1;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_145;
reg   [4:0] ap_NS_fsm;


hls_snn_izikevich_axis_cp_network_to_mem grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_start ),
    .ap_done( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_done ),
    .ap_idle( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_idle ),
    .ap_ready( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_ready ),
    .input_stream0_TDATA( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TDATA ),
    .input_stream0_TVALID( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TVALID ),
    .input_stream0_TREADY( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TREADY ),
    .input_stream0_TLAST( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TLAST ),
    .neuron_type_mem_V_address0( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_address0 ),
    .neuron_type_mem_V_ce0( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_ce0 ),
    .neuron_type_mem_V_we0( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_we0 ),
    .neuron_type_mem_V_d0( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_d0 ),
    .neuron_type_mem_V_q0( grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_q0 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_ready)) begin
            grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_done))) begin
        x1_reg_110 <= ap_const_lv15_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond_fu_143_p2 == ap_const_lv1_0))) begin
        x1_reg_110 <= x_fu_149_p2;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st5_fsm_4) begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st5_fsm_4) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_23) begin
    if (ap_sig_bdd_23) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_75) begin
    if (ap_sig_bdd_75) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_113) begin
    if (ap_sig_bdd_113) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_84) begin
    if (ap_sig_bdd_84) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_145) begin
    if (ap_sig_bdd_145) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_ce0 or ap_sig_cseq_ST_st3_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        neuron_type_mem_V_ce0 = grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_ce0;
    end else begin
        neuron_type_mem_V_ce0 = ap_const_logic_0;
    end
end

always @ (grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_we0 or ap_sig_cseq_ST_st3_fsm_2) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        neuron_type_mem_V_we0 = grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_we0;
    end else begin
        neuron_type_mem_V_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        output_indexes_address0 = ap_const_lv64_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        output_indexes_address0 = ap_const_lv64_0;
    end else begin
        output_indexes_address0 = 'bx;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1))) begin
        output_indexes_ce0 = ap_const_logic_1;
    end else begin
        output_indexes_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st2_fsm_1) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        output_indexes_mem_0_ap_vld = ap_const_logic_1;
    end else begin
        output_indexes_mem_0_ap_vld = ap_const_logic_0;
    end
end

always @ (grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_done or ap_sig_cseq_ST_st3_fsm_2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_logic_0 == grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_done))) begin
        output_indexes_mem_1_ap_vld = ap_const_logic_1;
    end else begin
        output_indexes_mem_1_ap_vld = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        u_mem_ce0 = ap_const_logic_1;
    end else begin
        u_mem_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or exitcond_fu_143_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond_fu_143_p2 == ap_const_lv1_0))) begin
        u_mem_we0 = ap_const_logic_1;
    end else begin
        u_mem_we0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        v_mem_ce0 = ap_const_logic_1;
    end else begin
        v_mem_ce0 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st4_fsm_3 or exitcond_fu_143_p2) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond_fu_143_p2 == ap_const_lv1_0))) begin
        v_mem_we0 = ap_const_logic_1;
    end else begin
        v_mem_we0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_done or exitcond_fu_143_p2) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_logic_0 == grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_done)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if ((exitcond_fu_143_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end



always @ (ap_CS_fsm) begin
    ap_sig_bdd_113 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_145 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_23 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_75 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_84 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

assign exitcond_fu_143_p2 = (x1_reg_110 == ap_const_lv15_70E4? 1'b1: 1'b0);

assign grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_start = grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_ap_start_ap_start_reg;

assign grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TDATA = input_stream0_TDATA;

assign grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TLAST = input_stream0_TLAST;

assign grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TVALID = input_stream0_TVALID;

assign grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_q0 = neuron_type_mem_V_q0;

assign input_stream0_TREADY = grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_input_stream0_TREADY;

assign neuron_type_mem_V_address0 = grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_address0;

assign neuron_type_mem_V_d0 = grp_hls_snn_izikevich_axis_cp_network_to_mem_fu_121_neuron_type_mem_V_d0;

assign output_indexes_mem_0 = output_indexes_q0;

assign output_indexes_mem_1 = output_indexes_q0;

assign tmp_s_fu_155_p1 = x1_reg_110;

assign u_mem_address0 = tmp_s_fu_155_p1;

assign u_mem_d0 = ap_const_lv32_C1600000;

assign v_mem_address0 = tmp_s_fu_155_p1;

assign v_mem_d0 = ap_const_lv32_C28C0000;

assign x_fu_149_p2 = (x1_reg_110 + ap_const_lv15_1);


endmodule //hls_snn_izikevich_hls_snn_initialize

